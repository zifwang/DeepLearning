# Problem 5: Lienar Classier: Human vs Computer random sequences
# Author: Zifan Wang

import numpy as np
import h5py
import matplotlib.pyplot as plt

'''
    1.Use the le binary_random_sp2019.hdf5. This le has all of the data generated by
    students in HW1 and also has an equal number of sequences generated using numpy.
    Using this data, construct the (2020) matrix ^R - i.e., the sample correlation matrix
    for the data. Note that the data has been converted from 0 and 1 to 1.
'''
# Load data file to binary_random
binary_random = h5py.File('../dataset5/binary_random_sp2019.hdf5','r+')
# This data file has two keys human and machine.
humanData = np.asarray(binary_random['human'])                          # Get human generate random data with size (2400,20)
computerData = np.asarray(binary_random['machine'])                     # Get computer generate random data with size (2400,20)                         
# Create sample correlation matrix with size 20*20
correlationHuman = np.corrcoef(np.transpose(humanData))                 # Size 20*20
correlationComputer = np.corrcoef(np.transpose(computerData))           # Size 20*20


'''
    2. 
    a. Find the eigen-vectors and eigen-values for ^R. 
    b. What is the variance of the most significant two components of the data? 
    c. What percentage of the total variance is captured by these two components? 
    d. Can you see any signicance in the eigen-vectors e0 and e1 that would suggest why they capture much of the variation? 
    e. Plot k vs. k on a stem plot.
'''
# a. Find the eigen-vectors and eigen-values for ^R. 
eValuesHuman, eVectorsHuman = np.linalg.eig(correlationHuman)            # Get eigen-vectors and eigen-values for correlationHuman matrix
eValuesComputer, eVectorsComputer = np.linalg.eig(correlationComputer)   # Get eigen-vectors and eigen-values for correlationComputer matrix
# b. What is the variance of the most significant two components of the data?
eValsTwoHuman = eValuesHuman[0:2,]                                       # the most significant two components of the eigenvalue of correlationHuman matrix
eValsTwoComputer = eValuesComputer[0:2,]                                 # the most significant two components of the eigenvalue of correlationComputer matrix
eVectTwoHuman = eVectorsHuman[0:2,]                                      # the most significant two components of the eigenvector of correlationHuman matrix
eVectTwoComputer = eVectorsComputer[0:2,]                                # the most significant two components of the eigenvector of correlationComputer matrix
# c. What percentage of the total variance is captured by these two components? 
totalVarianceHuman = np.sum(eValuesHuman)                                # get total variance of eValuesHuman
totalVarianceComputer = np.sum(eValuesComputer)                          # get total variance of eValuesComputer
topTwoVarHuman = np.sum(eValsTwoHuman)                                   # top two e-values sum human
topTwoVarComputer = np.sum(eValsTwoComputer)                             # top two e-values sum computer
percentageTopTwoHuman = topTwoVarHuman/totalVarianceHuman                # percentage of top two variance human
percentageTopTwoComputer = topTwoVarComputer/totalVarianceComputer       # percentage of top two variance computer
# d. Can you see any signicance in the eigen-vectors e0 and e1 that would suggest why they capture much of the variation? 

